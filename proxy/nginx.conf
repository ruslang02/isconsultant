
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  86400;

    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;

    client_max_body_size 200M;

    # Load balancing
    upstream api-endpoint {
        server server:8080 weight=5;
        server api1.eu.consultant.infostrategic.com;
        server api2.eu.consultant.infostrategic.com;
        server api1.us.consultant.infostrategic.com;
        server api1.as.consultant.infostrategic.com;
    }

    upstream janus-endpoint {
        server janus:8188 weight=5;
        server janus1.eu.consultant.infostrategic.com;
        server janus1.us.consultant.infostrategic.com;
        server janus1.as.consultant.infostrategic.com;
    }
    
    #gzip  on;

    server {
      listen       80;
      server_name  localhost;

      #charset koi8-r;
      #access_log  /var/log/nginx/host.access.log  main;

      location / {
          proxy_pass http://client:8080;
      }

      location /api {
          proxy_pass http://api-endpoint/api;
      }

    #   Do not show API docs in production.
    #
    #   location /docs {
    #       proxy_pass http://api-endpoint/docs;
    #   }

      location /chat {
          proxy_pass http://api-endpoint/chat;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
      }

      location /gateway2 {
          set $auth_token "Bearer $arg_access_token";
          auth_request /auth;
          proxy_pass http://janus:8188;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
      }

      location = /auth {
          internal;
          proxy_set_header "Authorization" $auth_token;
          proxy_pass_request_body off;
          proxy_set_header Content-Length "";
          proxy_set_header accept "*/*";
          proxy_pass http://api-endpoint/api/auth/janus;
      }
  }
}
